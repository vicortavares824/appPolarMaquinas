<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/apppolarmaquinas/LoginScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/apppolarmaquinas/LoginScreen.kt" />
              <option name="updatedContent" value="package com.example.apppolarmaquinas&#10;&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.tooling.preview.Preview&#10;&#10;@Composable&#10;fun LoginScreen(onBack: () -&gt; Unit = {}) {&#10;    Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.Center) {&#10;        Button(onClick = onBack) {&#10;            Text(text = &quot;Tela de Login - Voltar&quot;)&#10;        }&#10;    }&#10;}&#10;&#10;@Preview(showBackground = true)&#10;@Composable&#10;fun LoginScreenPreview() {&#10;    LoginScreen()&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/apppolarmaquinas/SignupScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/apppolarmaquinas/SignupScreen.kt" />
              <option name="updatedContent" value="package com.example.apppolarmaquinas&#10;&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.tooling.preview.Preview&#10;&#10;@Composable&#10;fun SignupScreen(onBack: () -&gt; Unit = {}) {&#10;    Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.Center) {&#10;        Button(onClick = onBack) {&#10;            Text(text = &quot;Tela de Cadastro - Voltar&quot;)&#10;        }&#10;    }&#10;}&#10;&#10;@Preview(showBackground = true)&#10;@Composable&#10;fun SignupScreenPreview() {&#10;    SignupScreen()&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/apppolarmaquinas/view/component/compBackButton.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/apppolarmaquinas/view/component/compBackButton.kt" />
              <option name="originalContent" value="package com.example.apppolarmaquinas.view.component&#10;&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.Arrangement&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.PaddingValues&#10;import androidx.compose.foundation.layout.Row&#10;import androidx.compose.foundation.layout.Spacer&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.fillMaxWidth&#10;import androidx.compose.foundation.layout.height&#10;import androidx.compose.foundation.layout.width&#10;import androidx.compose.foundation.layout.size&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.ButtonDefaults&#10;import androidx.compose.material3.Icon&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.Brush&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.graphics.vector.ImageVector&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.unit.dp&#10;import androidx.compose.ui.unit.sp&#10;&#10;@Composable&#10;fun FancyButton(&#10;    text: String,&#10;    icon: ImageVector,&#10;    gradientColors: List&lt;Color&gt;,&#10;    onClick: () -&gt; Unit&#10;) {&#10;    Button(&#10;        onClick = onBack,&#10;        colors = ButtonDefaults.buttonColors(containerColor = Color.Transparent),&#10;        contentPadding = PaddingValues(),&#10;        shape = RoundedCornerShape(50.dp),&#10;        modifier = Modifier&#10;            .fillMaxWidth(0.3f)&#10;            .height(56.dp)&#10;    ) {&#10;        Box(&#10;            modifier = Modifier&#10;                .background(&#10;                    brush = Brush.horizontalGradient(colors = gradientColors),&#10;                    shape = RoundedCornerShape(50.dp)&#10;                )&#10;                .fillMaxSize(),&#10;            contentAlignment = Alignment.Center&#10;        ) {&#10;            Row(&#10;                verticalAlignment = Alignment.CenterVertically,&#10;                horizontalArrangement = Arrangement.Center&#10;            ) {&#10;                Icon(&#10;                    imageVector = icon,&#10;                    contentDescription = null,&#10;                    tint = Color.White,&#10;                    modifier = Modifier.size(20.dp)&#10;                )&#10;                Text(&#10;                    text = text,&#10;                    color = Color.White,&#10;                    fontSize = 18.sp,&#10;                    fontWeight = FontWeight.Bold&#10;                )&#10;                Spacer(modifier = Modifier.width(8.dp))&#10;&#10;            }&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.apppolarmaquinas.view.component&#10;&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.Arrangement&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.PaddingValues&#10;import androidx.compose.foundation.layout.Row&#10;import androidx.compose.foundation.layout.Spacer&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.fillMaxWidth&#10;import androidx.compose.foundation.layout.height&#10;import androidx.compose.foundation.layout.width&#10;import androidx.compose.foundation.layout.size&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.ButtonDefaults&#10;import androidx.compose.material3.Icon&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.Brush&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.graphics.vector.ImageVector&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.unit.dp&#10;import androidx.compose.ui.unit.sp&#10;&#10;@Composable&#10;fun FancyButton(&#10;    text: String,&#10;    icon: ImageVector,&#10;    gradientColors: List&lt;Color&gt;,&#10;    onClick: () -&gt; Unit&#10;) {&#10;    Button(&#10;        onClick = onClick,&#10;        colors = ButtonDefaults.buttonColors(containerColor = Color.Transparent),&#10;        contentPadding = PaddingValues(),&#10;        shape = RoundedCornerShape(50.dp),&#10;        modifier = Modifier&#10;            .fillMaxWidth(0.3f)&#10;            .height(56.dp)&#10;    ) {&#10;        Box(&#10;            modifier = Modifier&#10;                .background(&#10;                    brush = Brush.horizontalGradient(colors = gradientColors),&#10;                    shape = RoundedCornerShape(50.dp)&#10;                )&#10;                .fillMaxSize(),&#10;            contentAlignment = Alignment.Center&#10;        ) {&#10;            Row(&#10;                verticalAlignment = Alignment.CenterVertically,&#10;                horizontalArrangement = Arrangement.Center&#10;            ) {&#10;                Icon(&#10;                    imageVector = icon,&#10;                    contentDescription = null,&#10;                    tint = Color.White,&#10;                    modifier = Modifier.size(20.dp)&#10;                )&#10;                Text(&#10;                    text = text,&#10;                    color = Color.White,&#10;                    fontSize = 18.sp,&#10;                    fontWeight = FontWeight.Bold&#10;                )&#10;                Spacer(modifier = Modifier.width(8.dp))&#10;&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>